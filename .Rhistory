memory.limit()
memory.limit(size = 7000)
DF <- read.csv("Taxi_Trips_-_2019.csv")
filenames <- list()
for (i in 1:165) {
filenames[[i]] <- paste("Taxi_Trips_-_2019.csv_", i, sep='')
}
View(filenames)
View(filenames)
for (i in 1:165) {
filenames[i] <- paste("Taxi_Trips_-_2019.csv_", i, sep='')
}
print(filenames)
print(filenames[1])
print(filenames[2])
# add dataframes from each file to array
DF_array <- lapply(filenames, read.csv)
for (i in 1:165) {
filenames[i] <- paste("Taxi_Trips_-_2019.tsv_", i, sep='')
}
View(filenames)
View(filenames)
# add dataframes from each file to array
DF_array <- lapply(filenames, read.csv)
setwd("~/FALL 2022 offline/CS 424 offline/project 3")
# add dataframes from each file to array
DF_array <- lapply(filenames, read.csv)
for (i in 1:165) {
filenames[i] <- paste("Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
# add dataframes from each file to array
DF_array <- lapply(filenames, read.csv)
View(DF_array)
View(DF_array)
# verify dataframes have the right columns
lapply(DF_array, function(x) print(names(x)))
View(DF_array)
# get first dataframe with header
DF <- read.table("./datasets/CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals_1.tsv", sep = ",", header = TRUE)
# get first dataframe with header
DF <- read.table("./datasets/CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals_1.tsv", sep = ",", header = TRUE)
# get first dataframe with header
DF <- read.table(filenames[1], sep = ",", header = TRUE)
print(filenames[2])
print(filenames[[2]])
print(filenames[[2]])
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
filenames <- list()
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
View(filenames)
View(filenames)
# get first dataframe with header
DF <- read.table(filenames[1], sep = ",", header = TRUE)
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
View(DF)
# append dataframes without header to original dataframe
for (i in 2:3) {
DF <- rbind(DF, read.table(
file = paste0("./datasets/CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals_", i, ".tsv"),
sep = ",", header = FALSE)
)
}
# append dataframes without header to original dataframe
for (i in 2:3) {
DF <- rbind(DF, read.table(
file = paste0(filenames[[i]], i, ".tsv"),
sep = ",", header = FALSE)
)
}
load("~/FALL 2022 offline/CS 424 offline/project 3/.RData")
colsToKeep <- c(3, 5, 6, 9, 10, 17)
filenames <- list()
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
filenames <- list()
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
colsToKeep <- c(3, 5, 6, 9, 10, 17)
colsToKeep <- c(3, 5, 6, 9, 10, 17)
colsToKeep <- c(3, 5, 6, 9, 10, 17)
# assign file names for 165 files
filenames <- list()
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
colsToKeep <- c(3, 5, 6, 9, 10, 17)
colsToKeep <- c(3, 5, 6, 9, 10, 17)
# assign file names for 165 files
filenames <- list()
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
# get names of ALL columns
names <- names(DF)
# remove unnecessary cols
DF <- DF[colsToKeep]
# read next csv
temp <- read.table(file = paste0(filenames[[1]]), sep = ",", header = FALSE)
# set names of columns, since there is no header
colnames(temp) <- names
# remove unnecessary cols
temp[colsToKeep]
# append dataframes without header to original dataframe
for (i in 2:90) {
# read next csv
temp <- read.table(file = paste0(filenames[[i]]), sep = ",", header = FALSE)
# set names of columns, since there is no header
colnames(temp) <- names
# remove unnecessary cols
temp <- temp[colsToKeep]
# append to main dataframe
DF <- rbind(DF, temp)
}
names[colsToKeep]
View(DF)
test <- subset(DF, "Trip.Miles" <= .5)
library(dplyr)
install.packages("dplyr")
library(dplyr)
test <- rename(temp, "miles" = "Trip.Miles")
View(test)
#
# give easy names to columns
#
renameCols <- function(DF) {
names(DF) <- easyColNames
return(DF)
}
renamed <- renameCols(temp)
easyColNames <- c("start", "duration", "miles", "pickupArea", "dropOffArea", "Company")
renamed <- renameCols(temp)
View(renamed)
test <- subset(temp, "Trip.Miles" <= .5)
View(temp)
View(temp)
test <- subset(temp, 'Trip.Miles' <= .5)
colsToKeep <- c(3, 5, 6, 9, 10, 17)
easyColNames <- c("start", "duration", "miles", "pickupArea", "dropOffArea", "Company")
lsToKeep <- c(3, 5, 6, 9, 10, 17)
easyColNames <- c("start", "duration", "miles", "pickupArea", "dropOffArea", "Company")
# assign file names for 165 files
filenames <- list()
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
# get names of ALL columns
names <- names(DF)
# remove unnecessary cols -- TODO create a filter function
DF <- DF[colsToKeep]
library(dplyr)
colsToKeep <- c(3, 5, 6, 9, 10, 17)
easyColNames <- c("start", "duration", "miles", "pickupArea", "dropOffArea", "Company")
# assign file names for 165 files
filenames <- list()
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
# remove unnecessary cols -- TODO create a filter function
DF <- DF[colsToKeep]
DF <- renameCols(DF)
#
# remove all trips that do not fall under constraints
#
filterTrips <- function(DF) {
# less than 0.5 miles
DF <- subset(DF, "Trip.Miles" <= .5)
# more than 100 miles
# less than 60 seconds
# greater than 5 hours
# all trips that either start or end outside of a Chicago community area
}
#
# give easy names to columns
#
renameCols <- function(DF) {
names(DF) <- easyColNames
return(DF)
}
#
# fix trips granularity
#
fixGranularity <- function (DF) {
# TODO
return(DF)
}
#
# perform all data parsing in one function
#
parseTripData <- function(DF) {
DF <- renameCols(DF)
DF <- filterTrips(DF)
DF <- fixGranularity(DF)
return(DF)
}
DF <- renameCols(DF)
View(DF)
for (i in 2:4) {
# read next csv
temp <- read.table(file = paste0(filenames[[i]]), sep = ",", header = FALSE)
# remove unnecessary cols --- TODO create a filter function
temp <- temp[colsToKeep]
temp <- renameCols(temp)
# append to main dataframe
DF <- rbind(DF, temp)
}
View(DF)
test <- subset(DF, miles <= .5)
colsToKeep <- c(3, 5, 6, 9, 10, 17)
easyColNames <- c("start", "duration", "miles", "pickupArea", "dropOffArea", "Company")
# assign file names for 165 files
filenames <- list()
for (i in 1:165) {
filenames[i] <- paste("./datasets/Taxi_Trips_-_2019_", i, ".tsv", sep='')
}
#
# remove all trips that do not fall under constraints
#
filterTrips <- function(DF) {
# less than 0.5 miles
DF <- subset(DF, miles <= .5)
# more than 100 miles
# less than 60 seconds
# greater than 5 hours
# all trips that either start or end outside of a Chicago community area
}
#
# give easy names to columns
#
renameCols <- function(DF) {
names(DF) <- easyColNames
return(DF)
}
#
# fix trips granularity
#
fixGranularity <- function (DF) {
# TODO
return(DF)
}
#
# perform all data parsing in one function
#
parseTripData <- function(DF) {
DF <- DF[colsToKeep]
DF <- renameCols(DF)
DF <- filterTrips(DF)
DF <- fixGranularity(DF)
return(DF)
}
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
DF <- parseTripData(DF)
View(DF)
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
DF <- parseTripData(DF)
View(test)
#
# remove all trips that do not fall under constraints
#
filterTrips <- function(DF) {
# less than 0.5 miles
DF <- subset(DF, miles >= .5)
# more than 100 miles
# less than 60 seconds
# greater than 5 hours
# all trips that either start or end outside of a Chicago community area
}
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
DF <- parseTripData(DF)
View(DF)
#
# remove all trips that do not fall under constraints
#
filterTrips <- function(DF) {
# less than 0.5 miles
DF <- subset(DF, miles >= .5 & mile <= 100.00)
# more than 100 miles
# less than 60 seconds
# greater than 5 hours
# all trips that either start or end outside of a Chicago community area
}
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
DF <- parseTripData(DF)
#
# remove all trips that do not fall under constraints
#
filterTrips <- function(DF) {
# less than 0.5 miles
DF <- subset(DF, miles >= .5 & miles <= 100.00)
# more than 100 miles
# less than 60 seconds
# greater than 5 hours
# all trips that either start or end outside of a Chicago community area
}
# get first dataframe with header
DF <- read.table(filenames[[1]], sep = ",", header = TRUE)
DF <- parseTripData(DF)
View(DF)
# append dataframes without header to original dataframe
for (i in 2:4) {
# read next csv
temp <- read.table(file = paste0(filenames[[i]]), sep = ",", header = FALSE)
temp <- parseTripData(temp)
# append to main dataframe
DF <- rbind(DF, temp)
}
View(DF)
temp <- read.table(file = paste0(filenames[[1]]), sep = ",", header = FALSE)
View(temp)
temp <- read.table(filenames[[1]], sep = ",", header = TRUE)
View(temp)
